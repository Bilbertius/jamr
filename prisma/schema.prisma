// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider =        "postgresql"
  url      =        env("DATABASE_URL")
}

generator client {
  provider =        "prisma-client-js"
}

enum Role {
    USER
    ADMIN
}


model UserProfile {
    id              String       @id @default(cuid())
    created_at      DateTime     @default(now())
    username        String       @unique
    email           String       @unique


    role            Role         @default(USER)
    votes           Vote[]
    comments        Comment[]
    token           String?
    }

model Musician {
    id              String      @id @default(cuid())
    first_name      String
    last_name       String?
    stage_name      String?
    band            Band?       @relation(fields: [bandId], references: [id])
    bandId          String?


 }

model Band {
    id              String          @id @default(cuid())
    name            String          @unique
    date_founded    DateTime?
    musicians       Musician[]
    albums          Album[]
    songs           Song[]
    shows           Show[]
    image_url       String          @default("")
}

model Album {
    id                  String      @id @default(cuid())
    name                String
    band                Band        @relation(fields: [bandId], references: [id])
    bandId              String
    year_released       DateTime
    songs               Song[]
    images              String      @default("")
}

model Song {
    id                  String      @id @default(cuid())
    name                String
    band                Band        @relation(fields: [bandId], references: [id])
    bandId              String
    album               Album?      @relation(fields: [albumId], references: [id])
    albumId             String?
    jams                Jam[]
    trckNumber          Int?
}

model Show {
    id                  String @id @default(cuid())
    info                String
    band                Band @relation(fields: [bandId], references: [id])
    bandId              String
    jams                Jam[]

}

model Jam {
    id                  String      @id @default(cuid())
    song                Song        @relation(fields: [songId], references: [id])
    songId              String
    show                Show        @relation(fields: [showId], references: [id])
    showId              String
    votes               Vote[]
    comments            Comment[]


    }

model Vote {
    id                  String           @id @default(cuid())
    user                UserProfile      @relation(fields: [userId], references: [id])
    userId              String
    jam                 Jam              @relation(fields: [jamId], references: [id])
    jamId               String

}

model Comment {
    id              String    @id @default(cuid())
    user            UserProfile      @relation(fields: [userId], references: [id])
    userId          String
    jam             Jam       @relation(fields: [jamId], references: [id])
    jamId           String
    text            String
}